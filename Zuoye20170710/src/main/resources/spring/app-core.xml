<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/util
           http://www.springframework.org/schema/util/spring-util.xsd">
	<!-- 读取项目中特定位置上的属性文件 -->
	<!-- 一旦读取成功，就可以使用${属性名}方式得到属性的值 -->
	<context:property-placeholder location="classpath*:/system/*.properties" />

	<!-- 声明了一个C3P0中的数据库连接池类的Bean，这个Bean就是项目的数据源 -->
	<!-- destroy-method指定了当Bean被销毁时要执行的方法 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- 设置此数据源中的各种数据项 -->
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="acquireIncrement" value="${jdbc.acquireIncrement}" />
		<property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}" />
		<property name="acquireRetryDelay" value="${jdbc.acquireRetryDelay}" />
		<property name="autoCommitOnClose" value="${jdbc.autoCommitOnClose}" />
		<property name="breakAfterAcquireFailure" value="${jdbc.autoCommitOnClose}" />
		<property name="checkoutTimeout" value="${jdbc.checkoutTimeout}" />
		<property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}" />
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<property name="numHelperThreads" value="${jdbc.numHelperThreads}" />
	</bean>

	<!-- 声明Spring封装的Hibernate中的SessionFactory Bean -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties" ref="hibernateProperties" />
		<property name="packagesToScan" ref="packagesToScanList" />
	</bean>

	<!-- 声明Hibernate的事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 通知Spring容器，我们使用annotation方式进行事务管理 -->
	<tx:annotation-driven />

	<!-- 定义从哪些包中扫描Hibernate的实体类 -->
	<util:list id="packagesToScanList">
		<value>org.forten.**.entity</value>
		<value>org.forten.**.pojo</value>
		<value>org.forten.**.model</value>
	</util:list>

	<!-- 定义Hibernate相关的一些属性 -->
	<util:properties id="hibernateProperties">
		<!-- <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop> 
			<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop> -->
		<!-- <prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop> -->
		<prop key="hibernate.dialect">${hibernate.dialect}</prop>
		<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
		<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
		<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
		<!-- <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop> -->
	</util:properties>
</beans>